#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef tuple<ll, ll, ll> lll;
typedef tuple<ll, ll, ll, ll> llll;
typedef tuple<ll, ll, vector<ll>> llv;
typedef pair<ll, ll> pll;
typedef pair<ll, string> pls;
ll n = 0, m = 0, k = 0;

int main(void) {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin >> n;
    vector<string>v;
    for (int i = 0; i < n; i++) {
        string str = "";
        cin >> str;
        v.push_back(str);
    }
    vector<vector<ll>>graph(n + 1);
    vector<ll>degree(n + 1, 0);
    for (int i = 0; i < n - 1; i++) {
        ll a = 0, b = 0;
        cin >> a >> b;
        degree[b]++;
        graph[a].push_back(b);
    }
    ll start = 0;
    vector<bool>visited(n + 1, false);
    for (int i = 1; i <= n; i++) {
        if (!degree[i]) {
            start = i;
            break;
        }
    }
    function<void(ll)> dfs = [&](ll x) -> void {
        cout << v[x - 1];
        visited[x] = true;
        for (auto& i : graph[x]) {
            if (!visited[i]) {
                dfs(i);
            }
        }
        };
    dfs(start);
    return 0;
}